-- MySQL Script generated by MySQL Workbench
-- Thu Sep  5 09:48:42 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- Desativa as verificações de restrições únicas e de chaves estrangeiras para permitir a criação das tabelas
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- Define o modo SQL para garantir a consistência dos dados
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Criação do schema 'avaliacao2bd'
-- -----------------------------------------------------

-- Cria o schema 'avaliacao2bd' se não existir e define o conjunto de caracteres padrão como utf8
CREATE SCHEMA IF NOT EXISTS `avaliacao2bd` DEFAULT CHARACTER SET utf8 ;
USE `avaliacao2bd` ;

-- -----------------------------------------------------
-- Criação da tabela 'Categoria'
-- -----------------------------------------------------

-- Cria a tabela 'Categoria' para armazenar categorias de produtos
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Categoria` (
  `ID_Categoria` INT NOT NULL,  -- Identificador único da categoria
  `Nome` VARCHAR(90) NOT NULL,  -- Nome da categoria
  PRIMARY KEY (`ID_Categoria`)   -- Define 'ID_Categoria' como chave primária
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Vendedor'
-- -----------------------------------------------------

-- Cria a tabela 'Vendedor' para armazenar informações sobre vendedores
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Vendedor` (
  `ID_Vendedor` INT NOT NULL,    -- Identificador único do vendedor
  `Nome` VARCHAR(90) NOT NULL,    -- Nome do vendedor
  `Email` VARCHAR(90) NOT NULL,   -- Email do vendedor
  `Telefone` INT NOT NULL,        -- Telefone do vendedor
  `CNPJ` INT NOT NULL,            -- CNPJ do vendedor
  `Endereco` LONGTEXT NOT NULL,   -- Endereço do vendedor
  PRIMARY KEY (`ID_Vendedor`)     -- Define 'ID_Vendedor' como chave primária
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Produto'
-- -----------------------------------------------------

-- Cria a tabela 'Produto' para armazenar informações sobre produtos
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Produto` (
  `ID_Produto` INT NOT NULL,           -- Identificador único do produto
  `Nome` VARCHAR(90) NOT NULL,         -- Nome do produto
  `Descricao` LONGTEXT NULL,           -- Descrição do produto (opcional)
  `preco` DECIMAL NOT NULL,            -- Preço do produto
  `Estoque` INT NULL,                  -- Quantidade em estoque (opcional)
  `Categoria_ID_Categoria` INT NOT NULL, -- Identificador da categoria do produto
  `Vendedor_ID_Vendedor` INT NOT NULL,   -- Identificador do vendedor do produto
  PRIMARY KEY (`ID_Produto`),           -- Define 'ID_Produto' como chave primária
  INDEX `fk_Produto_Categoria_idx` (`Categoria_ID_Categoria` ASC), -- Índice para 'Categoria_ID_Categoria'
  INDEX `fk_Produto_Vendedor1_idx` (`Vendedor_ID_Vendedor` ASC),   -- Índice para 'Vendedor_ID_Vendedor'
  -- Define as restrições de chaves estrangeiras
  CONSTRAINT `fk_Produto_Categoria`
    FOREIGN KEY (`Categoria_ID_Categoria`)
    REFERENCES `avaliacao2bd`.`Categoria` (`ID_Categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_Vendedor1`
    FOREIGN KEY (`Vendedor_ID_Vendedor`)
    REFERENCES `avaliacao2bd`.`Vendedor` (`ID_Vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Cliente'
-- -----------------------------------------------------

-- Cria a tabela 'Cliente' para armazenar informações sobre clientes
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Cliente` (
  `ID_Cliente` INT NOT NULL,       -- Identificador único do cliente
  `Nome` VARCHAR(90) NOT NULL,     -- Nome do cliente
  `Email` VARCHAR(90) NULL,        -- Email do cliente (opcional)
  `Telefone` INT NOT NULL,         -- Telefone do cliente
  `Endereco` LONGTEXT NOT NULL,    -- Endereço do cliente
  PRIMARY KEY (`ID_Cliente`)       -- Define 'ID_Cliente' como chave primária
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Pedido'
-- -----------------------------------------------------

-- Cria a tabela 'Pedido' para armazenar informações sobre pedidos
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Pedido` (
  `ID_Pedido` INT NOT NULL,            -- Identificador único do pedido
  `Data_Pedido` DATE NOT NULL,         -- Data do pedido
  `Status` VARCHAR(45) NULL,           -- Status do pedido (opcional)
  `Cliente_ID_Cliente` INT NOT NULL,   -- Identificador do cliente que fez o pedido
  PRIMARY KEY (`ID_Pedido`),           -- Define 'ID_Pedido' como chave primária
  INDEX `fk_Pedido_Cliente1_idx` (`Cliente_ID_Cliente` ASC), -- Índice para 'Cliente_ID_Cliente'
  -- Define a restrição de chave estrangeira
  CONSTRAINT `fk_Pedido_Cliente1`
    FOREIGN KEY (`Cliente_ID_Cliente`)
    REFERENCES `avaliacao2bd`.`Cliente` (`ID_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Item_Pedido'
-- -----------------------------------------------------

-- Cria a tabela 'Item_Pedido' para armazenar itens de cada pedido
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Item_Pedido` (
  `ID_Item_Pedido` INT NOT NULL,         -- Identificador único do item do pedido
  `Quantidade` INT NOT NULL,             -- Quantidade do produto no pedido
  `Preco_Unitario` DECIMAL NOT NULL,     -- Preço unitário do produto
  `Pedido_ID_Pedido` INT NOT NULL,       -- Identificador do pedido
  `Produto_ID_Produto` INT NOT NULL,     -- Identificador do produto
  PRIMARY KEY (`ID_Item_Pedido`),       -- Define 'ID_Item_Pedido' como chave primária
  INDEX `fk_Item_Pedido_Pedido1_idx` (`Pedido_ID_Pedido` ASC), -- Índice para 'Pedido_ID_Pedido'
  INDEX `fk_Item_Pedido_Produto1_idx` (`Produto_ID_Produto` ASC), -- Índice para 'Produto_ID_Produto'
  -- Define as restrições de chaves estrangeiras
  CONSTRAINT `fk_Item_Pedido_Pedido1`
    FOREIGN KEY (`Pedido_ID_Pedido`)
    REFERENCES `avaliacao2bd`.`Pedido` (`ID_Pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Item_Pedido_Produto1`
    FOREIGN KEY (`Produto_ID_Produto`)
    REFERENCES `avaliacao2bd`.`Produto` (`ID_Produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Pagamento'
-- -----------------------------------------------------

-- Cria a tabela 'Pagamento' para armazenar informações sobre pagamentos
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Pagamento` (
  `ID_Pagamento` INT NOT NULL,         -- Identificador único do pagamento
  `Valor` DECIMAL NOT NULL,            -- Valor do pagamento
  `Metodo_Pagamento` VARCHAR(90) NOT NULL, -- Método de pagamento
  `Data_Pagamento` DATE NOT NULL,       -- Data do pagamento
  `Pedido_ID_Pedido` INT NOT NULL,      -- Identificador do pedido relacionado
  PRIMARY KEY (`ID_Pagamento`),        -- Define 'ID_Pagamento' como chave primária
  INDEX `fk_Pagamento_Pedido1_idx` (`Pedido_ID_Pedido` ASC), -- Índice para 'Pedido_ID_Pedido'
  -- Define a restrição de chave estrangeira
  CONSTRAINT `fk_Pagamento_Pedido1`
    FOREIGN KEY (`Pedido_ID_Pedido`)
    REFERENCES `avaliacao2bd`.`Pedido` (`ID_Pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Criação da tabela 'Entrega'
-- -----------------------------------------------------

-- Cria a tabela 'Entrega' para armazenar informações sobre entregas
CREATE TABLE IF NOT EXISTS `avaliacao2bd`.`Entrega` (
  `ID_Entrega` INT NOT NULL,            -- Identificador único da entrega
  `Data_Envio` DATE NOT NULL,           -- Data do envio
  `Data_Entrega` DATE NOT NULL,         -- Data da entrega
  `Endereco_Entrega` LONGTEXT NOT NULL, -- Endereço de entrega
  `Pedido_ID_Pedido` INT NOT NULL,      -- Identificador do pedido relacionado
  PRIMARY KEY (`ID_Entrega`),           -- Define 'ID_Entrega' como chave primária
  INDEX `fk_Entrega_Pedido1_idx` (`Pedido_ID_Pedido` ASC), -- Índice para 'Pedido_ID_Pedido'
  -- Define a restrição de chave estrangeira
  CONSTRAINT `fk_Entrega_Pedido1`
    FOREIGN KEY (`Pedido_ID_Pedido`)
    REFERENCES `avaliacao2bd`.`Pedido` (`ID_Pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- Restaura as configurações de verificação e modo SQL para os valores antigos
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
